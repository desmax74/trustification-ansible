kind: ConfigMap
apiVersion: v1
metadata:
  name: init-guac-db
  labels:
    app.kubernetes.io/name: init-guac-db
    app.kubernetes.io/component: guac
    app.kubernetes.io/instance: redhat-trusted-profile-analyzer
    app.kubernetes.io/version: 1.1.1
    app.kubernetes.io/part-of: trusted-profile-analyzer
  annotations: null
data:
  init.sql: "-- ensure we have the database\nSELECT 'CREATE DATABASE ' || :'db_name'\n\
      WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = :'db_name')\\gexec\n\
      \n-- create the user (if it doesn't exist)\nCREATE OR REPLACE FUNCTION add_user_if_not_exists(username\
      \ NAME) RETURNS integer\n    AS $$\nBEGIN\n    IF NOT EXISTS (SELECT FROM\
      \ pg_roles\n        WHERE rolname = username) THEN\n\n        EXECUTE FORMAT('CREATE\
      \ ROLE \"%I\" LOGIN', username);\n\n    END IF;\n    RETURN NULL;\nEND;\n\
      $$ language plpgsql;\n\nSELECT add_user_if_not_exists(:'db_user');\n\n-- now\
      \ set the password\nALTER USER :db_user WITH PASSWORD :'db_password';\n\n\
      -- grant permission to connect\nGRANT CONNECT ON DATABASE :db_name TO :db_user;\n\
      \n-- grant permissions on database\n\\connect :db_name\n\nGRANT USAGE ON SCHEMA\
      \ public TO :db_user;\n\n-- grant on existing tables\nGRANT SELECT, INSERT,\
      \ UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO :db_user;\n\n-- grant on\
      \ future tables\nALTER DEFAULT PRIVILEGES\n    IN SCHEMA public\n    GRANT\
      \ SELECT, INSERT, UPDATE, DELETE ON TABLES TO :db_user;\n"
